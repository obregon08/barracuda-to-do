{
  "openapi": "3.0.0",
  "info": {
    "title": "API",
    "description": "",
    "contact": {
      "email": "obregon08@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/",
      "description": "API"
    }
  ],
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "developers",
      "description": "Operations available to regular developers"
    },
    {
      "name": "clients",
      "description": "Operations available to regular clients"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "returns posts",
        "description": "By passing in the appropriate options, you can either return all posts for the current user or \nshow one particular post\n",
        "operationId": "getPosts",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "pass an optional id to return just a single item",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "number"
                    },
                    "count": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "adds a Post item",
        "description": "Adds an item to the system",
        "operationId": "addPost",
        "requestBody": {
          "description": "Item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PostItem": {
        "required": [
          "id",
          "imageUrl",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "author": {
            "$ref": "#/components/schemas/User"
          },
          "imageUrl": {
            "type": "string",
            "example": "/home/profile.png"
          },
          "imageAlt": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "example": "2016-08-29T09:12:33.001Z"
          }
        }
      },
      "User": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      }
    }
  }
}